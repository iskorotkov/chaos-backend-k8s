apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf
  namespace: influxdb-telegraf
  labels:
    k8s-app: telegraf
data:
  telegraf.conf: |
    # Configuration for telegraf agent
    [agent]
      ## Default data collection interval for all inputs
      interval = "10s"
      ## Rounds collection interval to 'interval'
      ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
      round_interval = true

      ## Telegraf will send metrics to outputs in batches of at most
      ## metric_batch_size metrics.
      ## This controls the size of writes that Telegraf sends to output plugins.
      metric_batch_size = 1000

      ## For failed writes, telegraf will cache metric_buffer_limit metrics for each
      ## output, and will flush this buffer on a successful write. Oldest metrics
      ## are dropped first when this buffer fills.
      ## This buffer only fills when writes fail to output plugin(s).
      metric_buffer_limit = 10000

      ## Collection jitter is used to jitter the collection by a random amount.
      ## Each plugin will sleep for a random time within jitter before collecting.
      ## This can be used to avoid many plugins querying things like sysfs at the
      ## same time, which can have a measurable effect on the system.
      collection_jitter = "0s"

      ## Default flushing interval for all outputs. Maximum flush_interval will be
      ## flush_interval + flush_jitter
      flush_interval = "10s"
      ## Jitter the flush interval by a random amount. This is primarily to avoid
      ## large write spikes for users running a large number of telegraf instances.
      ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
      flush_jitter = "0s"

      ## By default or when set to "0s", precision will be set to the same
      ## timestamp order as the collection interval, with the maximum being 1s.
      ##   ie, when interval = "10s", precision will be "1s"
      ##       when interval = "250ms", precision will be "1ms"
      ## Precision will NOT be used for service inputs. It is up to each individual
      ## service input to set the timestamp at the appropriate precision.
      ## Valid time units are "ns", "us" (or "Âµs"), "ms", "s".
      precision = ""

      ## Logging configuration:
      ## Run telegraf with debug log messages.
      debug = false
      ## Run telegraf in quiet mode (error log messages only).
      quiet = false
      ## Specify the log file name. The empty string means to log to stderr.
      logfile = ""

      ## Override default hostname, if empty use os.Hostname()
      hostname = ""
      ## If set to true, do no set the "host" tag in the telegraf agent.
      omit_hostname = false
    [[inputs.kube_inventory]]
      ## URL for the Kubernetes API
      url = "https://127.0.0.1"

      ## Namespace to use. Set to "" to use all namespaces.
      # namespace = "default"

      ## Use bearer token for authorization. ('bearer_token' takes priority)
      ## If both of these are empty, we'll use the default serviceaccount:
      ## at: /run/secrets/kubernetes.io/serviceaccount/token
      # bearer_token = "/path/to/bearer/token"
      ## OR
      # bearer_token_string = "abc_123"

      ## Set response_timeout (default 5 seconds)
      # response_timeout = "5s"

      ## Optional Resources to exclude from gathering
      ## Leave them with blank with try to gather everything available.
      ## Values can be - "daemonsets", deployments", "endpoints", "ingress", "nodes",
      ## "persistentvolumes", "persistentvolumeclaims", "pods", "services", "statefulsets"
      # resource_exclude = [ "deployments", "nodes", "statefulsets" ]

      ## Optional Resources to include when gathering
      ## Overrides resource_exclude if both set.
      # resource_include = [ "deployments", "nodes", "statefulsets" ]

      ## selectors to include and exclude as tags.  Globs accepted.
      ## Note that an empty array for both will include all selectors as tags
      ## selector_exclude overrides selector_include if both set.
      selector_include = []
      selector_exclude = ["*"]

      ## Optional TLS Config
      # tls_ca = "/path/to/cafile"
      # tls_cert = "/path/to/certfile"
      # tls_key = "/path/to/keyfile"
      ## Use TLS but skip chain & host verification
      # insecure_skip_verify = false

      ## Uncomment to remove deprecated metrics.
      # fielddrop = ["terminated_reason"]
    [[outputs.influxdb_v2]]
      ## The URLs of the InfluxDB cluster nodes.
      ##
      ## Multiple URLs can be specified for a single cluster, only ONE of the
      ## urls will be written to each interval.
      ## urls exp: http://127.0.0.1:8086
      urls = ["http://127.0.0.1:8086"]

      ## Token for authentication.
      token = "uNvGBa1siclF7TXx4N3ZrBu0PVwwEoyZhpOql5V3FceHfW7-Dt0KIZ_EAPyf2VgWNClH7EVnP1TWJbUHSbQTgQ=="

      ## Organization is the name of the organization you wish to write to; must exist.
      organization = "Chaos Framework"

      ## Destination bucket to write into.
      bucket = "chaos-app"
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: telegraf
  namespace: influxdb-telegraf
  labels:
    k8s-app: telegraf
spec:
  selector:
    matchLabels:
      name: telegraf
  template:
    metadata:
      labels:
        name: telegraf
    spec:
      containers:
        - name: telegraf
          image: docker.io/telegraf:1.16.2
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 500m
              memory: 500Mi
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: "HOST_PROC"
              value: "/rootfs/proc"
            - name: "HOST_SYS"
              value: "/rootfs/sys"
          volumeMounts:
            - name: sys
              mountPath: /rootfs/sys
              readOnly: true
            - name: proc
              mountPath: /rootfs/proc
              readOnly: true
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: utmp
              mountPath: /var/run/utmp
              readOnly: true
            - name: config
              mountPath: /etc/telegraf
      terminationGracePeriodSeconds: 30
      volumes:
        - name: sys
          hostPath:
            path: /sys
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: proc
          hostPath:
            path: /proc
        - name: utmp
          hostPath:
            path: /var/run/utmp
        - name: config
          configMap:
            name: telegraf
